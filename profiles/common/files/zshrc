zmodload zsh/datetime

function precmd() { print "" }

function preexec() {
  __TIMER=$EPOCHREALTIME
}

function powerline_precmd() {
  local __ERRCODE=$?
  local __DURATION=0

  if [ -n $__TIMER ]; then
    local __ERT=$EPOCHREALTIME
    __DURATION="$(($__ERT - ${__TIMER:-__ERT}))"
  fi

  PS1="$(powerline-go \
    -newline \
    -shorten-gke-names \
    -condensed \
    -theme low-contrast \
    -cwd-max-depth 3 \
    -modules duration,nix-shell,venv,kube,cwd,perms,git,jobs,exit,root \
    -duration $__DURATION \
    -error $__ERRCODE \
    -numeric-exit-codes \
    -shell zsh)"

  # Uncomment the following line to automatically clear errors after showing
  # them once. This not only clears the error for powerline-go, but also for
  # everything else you run in that shell. Don't enable this if you're not
  # sure this is what you want.
  #set "?"

  unset __TIMER
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

_zsh_autosuggest_strategy_histdb_top_here() {
    local query="select commands.argv from
history left join commands on history.command_id = commands.rowid
left join places on history.place_id = places.rowid
where places.dir LIKE '$(sql_escape $PWD)%'
and commands.argv LIKE '$(sql_escape $1)%'
group by commands.argv order by count(*) desc limit 1"
    suggestion=$(_histdb_query "$query")
}

ZSH_AUTOSUGGEST_STRATEGY=histdb_top_here

if [ "$TERM" != "linux" ]; then
  install_powerline_precmd
  unset RPS1
fi


for file in ~/.{functions,path,dockerfunc,extra,exports}; do
  if [[ -r "$file" ]] && [[ -f "$file" ]]; then
    source "$file"
  fi
done
unset file

for lib in ~/lib/*.sh; do
  if [[ -r "$lib" ]] && [[ -f "$lib" ]]; then
    source "$lib"
  fi
done
unset lib

function wang(){
  infocmp -a xterm-kitty | ssh $1 tic -x -o \~/.terminfo /dev/stdin
}

eval "$(direnv hook zsh)"
eval "$(thefuck --alias)"